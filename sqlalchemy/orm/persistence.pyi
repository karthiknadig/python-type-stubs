from . import attributes as attributes, evaluator as evaluator, loading as loading, sync as sync
from .. import sql as sql, util as util
from ..sql import expression as expression
from .base import state_str as state_str
from typing import Any

def save_obj(base_mapper: Any, states: Any, uowtransaction: Any, single: bool = ...) -> None: ...
def post_update(base_mapper: Any, states: Any, uowtransaction: Any, post_update_cols: Any) -> None: ...
def delete_obj(base_mapper: Any, states: Any, uowtransaction: Any) -> None: ...

class BulkUD:
    query: Any = ...
    mapper: Any = ...
    def __init__(self, query: Any) -> None: ...
    @property
    def session(self): ...
    def exec_(self) -> None: ...

class BulkEvaluate(BulkUD): ...
class BulkFetch(BulkUD): ...

class BulkUpdate(BulkUD):
    values: Any = ...
    update_kwargs: Any = ...
    def __init__(self, query: Any, values: Any, update_kwargs: Any) -> None: ...
    @classmethod
    def factory(cls, query: Any, synchronize_session: Any, values: Any, update_kwargs: Any): ...

class BulkDelete(BulkUD):
    def __init__(self, query: Any) -> None: ...
    @classmethod
    def factory(cls, query: Any, synchronize_session: Any): ...

class BulkUpdateEvaluate(BulkEvaluate, BulkUpdate): ...
class BulkDeleteEvaluate(BulkEvaluate, BulkDelete): ...
class BulkUpdateFetch(BulkFetch, BulkUpdate): ...
class BulkDeleteFetch(BulkFetch, BulkDelete): ...
